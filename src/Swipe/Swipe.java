/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Swipe;

/**
 * Information was generated by ChatGPT, image were taken from the internet
 * 
 * @author imshi
 */

import User.User;
import User.UserProfile;
import File.FileHandler;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class Swipe {
    private final List<User> randomUsers;
    private final List<User> selectedUsers;
    private final Random random = new Random();
    private int currentUserIndex;
    private final FileHandler fileHandler;
    private int imageTransitionDelay = 500;

    public Swipe(FileHandler fileHandler) {
        this.fileHandler = fileHandler;
        randomUsers = new ArrayList<>();
        selectedUsers = new ArrayList<>();
        generateUserProfiles();
    }

    public void generateUserProfiles() {
        List<String> names = List.of(
                "Levi Ackerman", "Gintoki Sakata", "Hijikata Toshirou", "Okita Sougo", "Tanjiro",
                "Uzui Tengen", "Hisoka", "Dan Nguyen", "Rengoku Kyojuro", "Iguro Obanai",
                "Tomioka Giyu", "Haruka Sakura", "Hajime Umemiya", "Natsu Dragneel",
                "Laxus Dreyar", "Heiji Hattori", "Rimuru Tempest", "Shirley Tran", "Taylor Tran", "PhucPhuc",
                "Vermouth", "Erza Scarlet"
        );

        List<String> bios = List.of(
                "Give me a chance darling",
                "I wanna be serious this time",
                "You want happiness? then want me!",
                "Let's write our love story together",
                "Your smile is my favorite sunrise",
                "You make my heart skip a beat",
                "Can we make today unforgettable?",
                "You're the reason I believe in love",
                "I'm just a fool for you",
                "You're the missing piece to my puzzle",
                "Let's create our own fairytale",
                "You + Me = Forever",
                "I can't wait to make memories with you",
                "You're the spark to my flame",
                "Be my reason to wake up every morning",
                "Your love is my favorite adventure",
                "Together, we can conquer the world",
                "You're my favorite distraction",
                "You make my heart smile",
                "With you, every moment is magic",
                "I want to be your everything"
        );

        List<String> interests = List.of(
                "Social networking, Environmental advocacy, Fashion design",
                "Investing, Global travel, Biking",
                "Sketching, Japanese animation, Gaming",
                "Outdoor activities, Ecological documentaries, Botanical hobbies",
                "Performing arts, Musical enjoyment, Physical well-being",
                "High-tech developments, Artificial intelligence, Winter sports",
                "Literature, Audio shows, Community service",
                "Creative writing, Historical research, Board games",
                "Building design, Historical exploration, Artistic painting",
                "Gastronomy, Exploring new cultures, Oenology",
                "Underwater exploration, Aquatic life study, Photographic arts",
                "Nature photography, Animal conservation, Exploring new places",
                "Tech innovations, Educational theory, Literary enjoyment",
                "Technological advancements, Eco-friendly initiatives, Playing golf",
                "Horticulture, Structural design, Mindful yoga",
                "Historical studies, Literary pursuits, Outdoor trekking",
                "Apparel design, Business ventures, Digital networking",
                "Cinematography, Societal activism, Ocean surfing",
                "Innovative marketing strategies, Artistic creation",
                "Photographic journeys, Global exploration, Artistic expression",
                "Sleeping, Watching films, Eating chocolate"
        );

        List<String> locations = List.of(
                "USA", "UK", "South Korea", "Australia", "Argentina", "Canada", "Ireland",
                "Italy", "Spain", "Mexico", "South Africa", "China", "New Zealand",
                "Scotland", "Vietnam", "Japan", "France", "Germany", "Brazil", "India", "New Zealand"
        );

        for (int i = 0; i < 21; i++) { 
            String name = names.get(random.nextInt(names.size()));
            int age = random.nextInt(18, 35);
            String location = locations.get(random.nextInt(locations.size()));
            String bio = bios.get(random.nextInt(bios.size()));
            List<String> interestList = UserProfile.interestsFromString(interests.get(random.nextInt(interests.size())));
            String gender = random.nextBoolean() ? "Male" : "Female";

            User user = new User(name, "", new UserProfile(age, location, bio, interestList, gender));
            randomUsers.add(user);
        }

        Collections.shuffle(randomUsers);
    }

    public void filterUsersByGender(String gender) {
        currentUserIndex = 0;
        randomUsers.removeIf(user -> !user.getProfile().getGender().equalsIgnoreCase(gender));
    }

    public void filterUsersByGender(List<String> genders) {
        currentUserIndex = 0;
        randomUsers.removeIf(user -> !genders.contains(user.getProfile().getGender().toLowerCase()));
    }

    public User getCurrentUser() {
        if (currentUserIndex < randomUsers.size()) {
            return randomUsers.get(currentUserIndex);
        }
        return null;
    }

    public void selectUser(boolean isYes) {
        if (isYes) {
            selectedUsers.add(randomUsers.get(currentUserIndex));
        }
        currentUserIndex++;
    }

    public void saveSelectedUsers() {
        StringBuilder content = new StringBuilder();
        for (User user : selectedUsers) {
            content.append(user.toString()).append("\n");
        }
        fileHandler.writeMatchesFile(content.toString());
    }

    public int getImageTransitionDelay() {
        return imageTransitionDelay;
    }

    public void setImageTransitionDelay(int delay) {
        this.imageTransitionDelay = delay;
    }
}